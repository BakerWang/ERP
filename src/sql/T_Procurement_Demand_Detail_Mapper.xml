<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="M_Procurement_Detail">
	<resultMap id="T_Procurement_Detail" type="ProcurementDemandDetail">
		<id column="ID" property="id" />
		<result column="ProcuremenID" property="procurementID" />
		<result column="ProductsID" property="productsID" />
		<result column="Demand_Number" property="demandNumber" />
		<result column="Remarks" property="remarks" jdbcType="VARCHAR" />
	</resultMap>
	
	 <resultMap id="T_Procurement_Detail_lIST" type="ProcurementDemandDetail" extends="T_Procurement_Detail">
	  	<result column="PRODUCTS_NAME" property="productsName" jdbcType="VARCHAR" />
	  	<result column="MEASUREMENT_COMPANY" property="measurementCompany" jdbcType="VARCHAR" />
	  </resultMap>
	  
	<sql id="Base_Column_List">
		ID,
		ProcuremenID ,
		ProductsID ,
		Demand_Number ,
		Remarks
	</sql>
	<sql id="where">
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="procurementID != null">
				and ProcuremenID = #{procurementID}
			</if>
			<if test="productsID != null">
				and ProductsID = #{productsID}
			</if>
		</where>
	</sql>

	<select id="select" resultMap="T_Procurement_Detail" parameterType="ProcurementDemandDetail">
		select
		<include refid="Base_Column_List" />
		from T_Procurement_Demand_DETAIL
		<include refid="where" />
	</select>

	<select id="list" resultMap="T_Procurement_Detail_lIST" parameterType="ProcurementDemandDetail">

		select
		S.ID,
		ProcuremenID ,
		ProductsID ,
		Demand_Number ,
    s.Remarks,
    name as PRODUCTS_NAME,
    MEASUREMENT_COMPANY
    from T_Procurement_Demand_DETAIL S LEFT JOIN T_PRODUCTS T ON T.ID=S.ProductsID
		<include refid="where" />
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<select id="count" resultType="Integer" parameterType="ProcurementDemandDetail">
		select
		count(id)
		from T_Procurement_Demand_DETAIL
		<include refid="where" />
	</select>

	<insert id="insert" parameterType="ProcurementDemandDetail">
		<selectKey keyProperty="id" resultType="Integer" order="BEFORE">
			select
			SEQUENCE_T_Procurement_DETAIL.nextval from dual
		</selectKey>
		insert into T_Procurement_Demand_DETAIL
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="procurementID != null">
				ProcuremenID,
			</if>
			<if test="productsID != null">
				ProductsID,
			</if>
			<if test="demandNumber != null">
				Demand_Number,
			</if>
			<if test="remarks != null">
				Remarks,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="procurementID != null">
				${procurementID},
			</if>
			<if test="productsID != null">
				${productsID},
			</if>
			<if test="demandNumber != null">
				${demandNumber},
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="update" parameterType="ProcurementDemandDetail">
		update T_Procurement_Demand_DETAIL
		<set>
			<if test="procurementID != null">
				ProcuremenID = #{procurementID},
			</if>
			<if test="productsID != null">
				ProductsID = #{productsID},
			</if>
			<if test="demandNumber != null">
				Demand_Number = #{demandNumber},
			</if>
			<if test="remarks != null">
				Remarks = #{remarks,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id}
	</update>

	<delete id="delete" parameterType="ProcurementDemandDetail">
		delete from T_Procurement_Demand_DETAIL
		where ID = #{id}
	</delete>
</mapper>